{"version":3,"file":"vue.js","sources":["../../src/observer/array.js","../../src/util.js","../../src/observer/dep.js","../../src/observer/index.js","../../src/observer/watcher.js","../../src/state.js","../../src/compiler/parse.js","../../src/compiler/generate.js","../../src/compiler/index.js","../../src/vdom/patch.js","../../src/lifecycle.js","../../src/init.js","../../src/vdom/index.js","../../src/global-api/extend.js","../../src/global-api/index.js","../../src/index.js"],"sourcesContent":["// 拿到数组原型上的方法 （原来的方法）\nlet oldArrayProtoMethods = Array.prototype;\n// 继承一下   ES5的方法\nexport let arrayMethods = Object.create(oldArrayProtoMethods);\nlet methods = [\n    'push',\n    'pop',\n    'shift',\n    'unshift',\n    'reverse',\n    'sort',\n    'splice'\n]\nmethods.forEach(method => {\n    arrayMethods[method] = function(...args) { // this就是observer里的value\n        // 当调用数组我们劫持后的这7个方法 页面应该更新 \n        // 我要知道数组对应哪个dep\n        \n        const result = oldArrayProtoMethods[method].apply(this, args);\n        let inserted;\n        let ob = this.__ob__;\n        switch (method) {\n            case 'push': // arr.push({a:1},{b:2})\n            case 'unshift': //这两个方法都是追加 追加的内容可能是对象类型，应该被再次进行劫持\n                inserted = args;\n                break;\n            case 'splice': // vue.$set原理\n                inserted = args.slice(2); // arr.splice(0,1,{a:1},{a:1},{a:1})\n            default:\n                break;\n        }\n        if(inserted) ob.observeArray(inserted); // 给数组新增的值也要进行观测\n        ob.dep.notify(); // 通知数组更新\n        return result;\n    }\n});","export function proxy(vm, data, key) {\n    Object.defineProperty(vm, key, { // vm.a\n        get() {\n            return vm[data][key]; // vm._data.a\n        },\n        set(newValue) { // vm.a = 100;\n            vm[data][key] = newValue // vm._data.a = 100;\n        }\n    })\n}\n\nexport function defineProperty(target, key, value) {\n    Object.defineProperty(target, key, {\n        enumerable: false, // 不能被枚举，不能被循环出来\n        configurable: false,\n        value\n    });\n}\n\nexport const LIFECYCLE_HOOKS = [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'updated',\n    'beforeDestroy',\n    'destroyed'\n];\n\nconst strats = {};\nstrats.components = function (parentVal,childVal) {\n    const res = Object.create(parentVal); // res.__proto__ = parentVal\n    if(childVal){\n        for(let key in childVal){\n            res[key] = childVal[key];\n        }\n    }\n    return res;\n}\n\n// strats.data = function(parentVal, childVal) {\n//  parentVal 函数  childVal函数\n//     return childVal; // 这里应该有合并data的策略\n// }\n// strats.computed = function() {}\n// strats.watch = function() {}\n\nfunction mergeHook(parentVal, childValue) { // 生命周期的合并\n    if(childValue){\n        if(parentVal){\n            return parentVal.concat(childValue); // 爸爸和儿子进行拼接\n        }else{\n            return [childValue]; //儿子需要转化成数组\n        }\n    }else{\n        return parentVal; // 不合并了 采用父亲的\n    }\n}\nLIFECYCLE_HOOKS.forEach(hook => {\n    strats[hook] = mergeHook\n})\nexport function mergeOptions(parent, child) {\n    // 遍历父亲 ，可能是父亲有 儿子没有 \n    const options = {};\n    for (let key in parent) { // 父亲和儿子都有在这就处理了\n        mergeField(key);\n    }\n    // 儿子有父亲没有 在这处理\n    for (let key in child) { // 将儿子多的赋予到父亲上\n        if (!parent.hasOwnProperty(key)) {\n            mergeField(key);\n        }\n    }\n\n    function mergeField(key) { // 合并字段\n        // 根据key 不同的策略来进行合并 \n        if (strats[key]) {\n            options[key] = strats[key](parent[key], child[key]);\n        } else {\n            // todo默认合并\n            if(child[key]){\n                options[key] = child[key]\n            }else{\n                options[key] = parent[key];\n            }\n        }\n    }\n\n\n    return options;\n}\nconst callbacks = [];\nlet pending = false;\nfunction flushCallbacks(){\n    while (callbacks.length) {\n        let cb = callbacks.shift();\n        cb();\n    } // 让nextTick中传入的方法依次执行\n    pending = false // 标识已经执行完毕\n}\nlet timerFunc;\nif(Promise){\n    timerFunc = ()=>{\n        Promise.resolve().then(flushCallbacks); // 异步处理更新\n    }\n}else if(MutationObserver){ // 可以监控dom变化,监控完毕后是异步更新\n    let observe = new MutationObserver(flushCallbacks);\n    let textNode = document.createTextNode(1); // 先创建一个文本节点\n    observe.observe(textNode,{characterData:true}); // 观测文本节点中的内容\n    timerFunc = ()=>{\n        textNode.textContent = 2; // 文中的内容改成2\n    }\n}else if(setImmediate){\n    timerFunc = ()=>{\n        setImmediate(flushCallbacks)\n    }\n}else{\n    timerFunc = ()=>{\n        setTimeout(flushCallbacks)\n    }\n}\nexport function nextTick(cb){ // 因为内部会调用nextTick 用户也会调用，但是异步只需要一次\n    callbacks.push(cb);\n    if(!pending){\n        // vue3 里的nextTick原理就是promise.then 没有做兼容性处理了\n        timerFunc();// 这个方法是异步方法 做了兼容处理了\n        pending = true;\n    }\n}\n\nfunction makeMap(str) {\n    const mapping = {};\n    const list = str.split(',');\n    for(let i =0; i< list.length;i++){\n        mapping[list[i]] = true;\n    }\n    return (key)=>{ // 判断这个标签名是不是原生标签\n        return mapping[key];\n    }\n}\n\nexport const isReservedTag = makeMap(\n    'a,div,img,image,text,span,p,button,input,textarea,ul,li'\n)","let id = 0;\nclass Dep{\n    constructor(){\n        this.subs = [];\n        this.id = id++;\n    }\n    depend(){\n        // 我们希望 watcher 可以存放dep \n        Dep.target.addDep(this); // 实现双向记忆的，让watcher记住dep的同时 ，让dep 也记住watcher\n        // this.subs.push(Dep.target);\n    }\n    addSub(watcher){\n        this.subs.push(watcher);\n    }\n    notify(){\n        this.subs.forEach(watcher=>watcher.update());\n    }\n}\nDep.target = null; // 静态属性 就一份\nlet stack = []; \nexport function pushTarget(watcher){\n    Dep.target = watcher;// 保留watcher\n    stack.push(watcher); // 有渲染watcher 其他的watcher\n\n}\n\nexport function popTarget(){\n    stack.pop();\n    Dep.target = stack[stack.length-1]; // 将变量删除掉\n}\nexport default Dep\n// 多对多的关系 一个属性有一个dep是用来收集watcher的\n// dep 可以存多个watcher    \n// 一个watcher可以对应多个dep ","import { arrayMethods } from \"./array\";\nimport { defineProperty } from \"../util\";\nimport Dep from \"./dep\";\nclass Observer{\n    constructor(value){   \n        this.dep = new Dep(); // value ={}  value = []\n        // 使用defineProperty 重新定义属性\n        // 判断一个对象是否被观测过看他有没有 __ob__这个属性\n        defineProperty(value,'__ob__',this);\n        if(Array.isArray(value)){\n            // 我希望调用push shift unshift splice sort reverse pop\n            value.__proto__ = arrayMethods;\n            this.observeArray(value); // 数组中普通类型是不做观测的\n        }else{\n            this.walk(value);\n        }\n    }\n    observeArray(value){\n        value.forEach(item=>{\n            observe(item); // 观测数组中的对象类型\n        })\n    }\n    walk(data){\n        let keys = Object.keys(data); // 获取对象的key\n        keys.forEach(key=>{\n            defineReactive(data,key,data[key]); // Vue.util.defineReactive\n        });\n    }\n}\n// 封装 继承\nfunction defineReactive(data,key,value){\n    // 获取到数组对应的dep\n    let childDep = observe(value); // 如果值是对象类型在进行观测\n\n    let dep = new Dep(); // 每个属性都有一个dep \n    // 当页面取值时 说明这个值用来渲染了，将这个watcher和这个属性对应起来\n    Object.defineProperty(data,key,{\n        get(){ // 依赖收集\n            if(Dep.target){ // 让这个属性记住这个watcher\n                dep.depend();\n                if(childDep ){ // 可能是数组可能是对象\n                    // 默认给数组增加了一个dep属性，当对数组这个对象取值的时候\n                    childDep.dep.depend(); // 数组存起来了这个渲染watcher\n                }\n            }\n            return value\n        },\n        set(newValue){ // 依赖更新\n            if(newValue === value) return;\n            observe(newValue); // 如果用户将值改为对象继续监控\n            value = newValue;\n\n            dep.notify(); // 异步更新 防止频繁操作\n        }\n    });\n    // 数组的更新 去重  优化  组件渲染\n}\n\nexport function observe(data){\n    // typeof null 也是object\n    // 不能不是对象 并且不是null\n    if(typeof data !== 'object' || data == null){\n        return;\n    }\n    if(data.__ob__){\n        return data;\n    }\n    return new Observer(data)\n\n    // 只观测存在的属性 data:{a:1,b:2} \n    // 数组中更改索引和长度 无法被监控\n    // vm.a = {a:1}\n}","import { pushTarget, popTarget } from \"./dep\";\nimport { nextTick } from \"../util\";\n\nlet id = 0;\nclass Watcher { // vm.$watch\n    // vm实例\n    // exprOrFn  vm._update(vm._render())\n    constructor(vm, exprOrFn, cb, options) {\n        this.vm = vm;\n        this.exprOrFn = exprOrFn;\n        this.cb = cb;\n        this.options = options;\n        this.user = options.user; // 这是一个用户watcher\n        this.lazy = options.lazy; // 如果watcher上有lazy属性 说明是一个就算属性\n        this.dirty = this.lazy; // dirty代表取值时是否执行用户提供的方法\n        this.id = id++; // watcher的唯一标识\n        this.deps = []; // watcher记录有多少dep依赖他\n        this.depsId = new Set();\n        if (typeof exprOrFn == 'function') {\n            this.getter = exprOrFn\n        } else {\n            this.getter = function() { // exprOrFn 可能传递过来的是一个字符串a\n                // 当去当前实例上取值时 才会触发依赖收集\n                let path = exprOrFn.split('.'); // ['a','a','a']\n                let obj = vm;\n                for (let i = 0; i < path.length; i++) {\n                    obj = obj[path[i]] // vm.a   // vm.a.a\n                }\n                return obj;\n            }\n        }\n        // 默认会先调用一次get方法 ，进行取值 将结果保留下来\n        this.value = this.lazy ? void 0 : this.get(); // 默认会调用get方法 \n    }\n    addDep(dep) {\n        let id = dep.id;\n        if (!this.depsId.has(id)) {\n            this.deps.push(dep);\n            this.depsId.add(id);\n            dep.addSub(this)\n        }\n    }\n    get() {\n        // Dep.target = watcher\n        pushTarget(this); // 当前watcher实例\n        let result = this.getter.call(this.vm); // 调用exprOrFn  渲染页面 取值（执行了get方法）  render方法 with(vm){_v(msg)}\n        popTarget(); //渲染完成后 将watcher删掉了\n        return result\n    }\n    run() {\n        let newValue = this.get(); // 渲染逻辑\n        let oldValue = this.value;\n        this.value = newValue; // 更新一下老值\n        if (this.user) {\n            this.cb.call(this.vm, newValue, oldValue);\n        }\n    }\n    update() {\n        if (this.lazy) { // 是计算属性\n            this.dirty = true;// 页面重新渲染就可以获得最新的值了\n        }else{\n            // 这里不要每次都调用get方法 get方法会重新渲染页面\n            queueWatcher(this); // 暂存的概念\n            //this.get(); // 重新渲染\n        }\n    }\n    evaluate() {\n        this.value = this.get();\n        this.dirty = false; // 取过一次值之后 就表示成已经取过值了\n    }\n    depend(){\n        // 计算属性watcher 会存储 dep  dep会存储watcher\n        \n        // 通过watcher找到对应的所有dep，让所有的dep 都记住这个渲染watcher\n        let i = this.deps.length;\n        while(i--){\n            this.deps[i].depend(); // 让dep去存储渲染watcher\n        }\n    }\n}\nlet queue = []; // 将需要批量更新的watcher 存到一个队列中，稍后让watcher执行\nlet has = {};\nlet pending = false;\n\nfunction flushSchedulerQueue() {\n    queue.forEach(watcher => {\n        watcher.run();\n        if (!watcher.user) {\n            watcher.cb()\n        }\n    });\n    queue = [];\n    has = {};\n    pending = false;\n}\n\nfunction queueWatcher(watcher) {\n    const id = watcher.id; // 对watcher进行去重\n    if (has[id] == null) {\n        queue.push(watcher); // 并且将watcher存到队列中\n        has[id] = true;\n        // 等待所有同步代码执行完毕后在执行\n        if (!pending) { // 如果还没清空队列，就不要在开定时器了  防抖处理 \n            nextTick(flushSchedulerQueue);\n            pending = true;\n        }\n    }\n}\n\nexport default Watcher\n\n// 在数据劫持的时候 定义defineProperty的时候 已经给每个属性都增加了一个dep\n\n// 1.是想把这个渲染watcher 放到了Dep.target属性上\n// 2.开始渲染 取值会调用get方法,需要让这个属性的dep 存储当前的watcher\n// 3.页面上所需要的属性都会将这个watcher存在自己的dep中\n// 4.等会属性更新了 就重新调用渲染逻辑 通知自己存储的watcher来更新","import { observe } from \"./observer/index\";\nimport {proxy, nextTick} from './util.js'\nimport Watcher from './observer/watcher'\nimport Dep from \"./observer/dep\";\nexport function initState(vm) { // vm.$options\n    const opts = vm.$options;\n    if (opts.props) {\n        initProps(vm);\n    }\n    if (opts.methods) {\n        initMethods(vm);\n    }\n    if (opts.data) {\n        initData(vm);\n    }\n    if (opts.computed) {\n        initComputed(vm);\n    }\n    if (opts.watch) {\n        initWatch(vm);\n    }\n}\nfunction initProps() {}\nfunction initMethods() {}\n\nfunction initData(vm) { // 数据的初始化操作\n    let data = vm.$options.data;\n    // vm._data 保存用户的所有的data\n    vm._data = data = typeof data == 'function'?data.call(vm):data;\n    for(let key in data){\n        proxy(vm,'_data',key);\n    }\n    observe(data); // 让这个对象重新定义set 和 get\n}\nfunction initComputed(vm) {\n    let computed = vm.$options.computed;\n    // 1.需要有watcher  2.还需要通过defineProperty 3.dirty\n    const watchers = vm._computedWatchers = {}; // 用来稍后存放计算属性的watcher\n    for(let key in computed){\n        const userDef = computed[key]; // 取出对应的值来\n        // 获取get方法\n        const getter = typeof userDef == 'function' ? userDef : userDef.get; // watcher使用的\n        watchers[key] = new Watcher(vm,getter,()=>{},{lazy:true}); // watcher很懒？\n\n        defineComputed(vm,key,userDef)// defineReactive();\n    }\n}\nfunction defineComputed(target,key,userDef){  // 这样写是没有缓存的\n    const sharedPropertyDefinition = {\n        enumerable: true,\n        configurable: true,\n        get:()=>{},\n        set:()=>{}\n    }\n    if(typeof userDef == 'function'){\n        sharedPropertyDefinition.get = createComputedGetter(key) // dirty 来控制是否调用userDef\n    }else{\n        sharedPropertyDefinition.get = createComputedGetter(key); // 需要加缓存\n        sharedPropertyDefinition.set = userDef.set;\n    }\n    Object.defineProperty(target,key,sharedPropertyDefinition)\n}\nfunction createComputedGetter(key){\n    return function (){ // 此方法是我们包装的方法，每次取值会调用此方法\n        const watcher = this._computedWatchers[key]; // 拿到这个属性对应watcher\n        if(watcher){\n            if(watcher.dirty){ // 默认肯定是脏的\n                watcher.evaluate(); // 对当前watcher求值\n            }\n            debugger;\n            if (Dep.target) { // 说明还有渲染watcher，也应该一并的收集起来\n                watcher.depend();\n            }\n            return watcher.value; // 默认返回watcher上存的值\n        }\n    }\n\n}\n\nfunction initWatch(vm) {\n    let watch = vm.$options.watch;\n    for(let key in watch){\n        const handler = watch[key]; // handler可能是 \n        if(Array.isArray(handler)){ // 数组 、\n            handler.forEach(handle=>{\n                createWatcher(vm,key,handle);\n            });\n        }else{\n            createWatcher(vm,key,handler); // 字符串 、 对象 、 函数\n        }\n    }\n}\nfunction createWatcher(vm,exprOrFn,handler,options){ // options 可以用来标识 是用户watcher\n    if(typeof handler == 'object'){\n        options = handler\n        handler = handler.handler; // 是一个函数\n    }\n    if(typeof handler == 'string'){\n        handler = vm[handler]; // 将实例的方法作为handler\n    }\n    // key handler 用户传入的选项\n    return vm.$watch(exprOrFn,handler,options)\n}\n\nexport function stateMixin(Vue){\n    Vue.prototype.$nextTick = function (cb) {\n        nextTick(cb);\n    }\n    Vue.prototype.$watch = function (exprOrFn,cb,options = {}) {\n        // 数据应该依赖这个watcher  数据变化后应该让watcher从新执行\n        let watcher = new Watcher(this,exprOrFn,cb,{...options,user:true});\n        if(options.immediate){\n            cb(); // 如果是immdiate应该立刻执行\n        }\n    }\n}","\n\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // 标签名\n// ?:匹配不捕获\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // </my:xx>\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的    aaa=\"aaa\"  a='aaa'   a=aaa\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >    >   <div></div>  <br/>\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\n// 数据结构 树、栈、链表、队列、\nexport function parseHTML(html) {\n    function createASTElement(tagName, attrs) {\n        return {\n            tag: tagName, // 标签名\n            type: 1, // 元素类型\n            children: [], // 孩子列表\n            attrs, // 属性集合\n            parent: null // 父元素\n        }\n    }\n    let root;\n    let currentParent;\n    let stack = [];\n    function start(tagName, attrs) { // 创建一个元素 作为根元素\n        let element = createASTElement(tagName, attrs);\n        if(!root){\n            root = element;\n        }\n        currentParent = element; // 当前解析的标签 保存起来\n        stack.push(element); // 将生产的ast元素放到栈中\n    }\n\n    // <div> <p></p> hello</div>    currentParent=p\n    function end(tagName) { // 在结尾标签处 创建父子关系\n        let element = stack.pop(); // 取出栈中的最后一个\n        currentParent = stack[stack.length-1];\n        if(currentParent){ // 在闭合时可以知道这个标签的父亲是谁\n            element.parent = currentParent;\n            currentParent.children.push(element);\n        }\n    }\n    function chars(text) {\n        text = text.trim();\n        if(text){\n            currentParent.children.push({\n                type:3,\n                text\n            })\n        }\n    }\n\n    while (html) { // 只要html不为空字符串就一直解析\n        let textEnd = html.indexOf('<');\n        if (textEnd == 0) {\n            // 肯定是标签\n            const startTagMatch = parseStartTag(); // 开始标签匹配的结果 处理开始\n            if (startTagMatch) {\n                start(startTagMatch.tagName, startTagMatch.attrs);\n                continue;\n            }\n            const endTagMatch = html.match(endTag);\n            if (endTagMatch) { // 处理结束标签\n                advance(endTagMatch[0].length);\n                end(endTagMatch[1]); // 将结束标签传入 \n                continue;\n            }\n        }\n        let text;\n        if (textEnd > 0) { // 是处理文本\n            text = html.substring(0, textEnd)\n        }\n        if (text) { // 处理文本\n            advance(text.length);\n            chars(text);\n        }\n\n    }\n\n    function advance(n) { // 将字符串进行截取操作 在更新html内容\n        html = html.substring(n)\n    }\n\n    function parseStartTag() {\n        const start = html.match(startTagOpen);\n        if (start) {\n            const match = {\n                tagName: start[1],\n                attrs: []\n            }\n            advance(start[0].length); // 删除开始标签\n            // 如果直接是闭合标签了 说明没有属性\n            let end, attr;\n            // 不是结尾标签 能匹配到属性\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] });\n                advance(attr[0].length); // 去掉当前属性\n            }\n            if (end) { // >  删除匹配到的结束标签\n                advance(end[0].length);\n                return match;\n            }\n        }\n    }\n\n    return root;\n}","// 编写<div id=\"app\" style=\"color:red\"> hello {{name}} <span>hello</span></div>\n\n// 结果:render(){\n//    return _c('div',{id:'app',style:{color:'red'}},_v('hello'+_s(name)),_c('span',null,_v('hello')))\n//}\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\n//  语法层面的转义\nfunction genProps(attrs) { //  id   \"app\"     / style  \"fontSize:12px;color:red\"\n    let str = '';\n    for (let i = 0; i < attrs.length; i++) {\n        let attr = attrs[i];\n        if (attr.name === 'style') {\n            let obj = {}; // 对样式进行特殊的处理 \n            attr.value.split(';').forEach(item => {\n                let [key, value] = item.split(':');\n                obj[key] = value;\n            });\n            attr.value = obj;\n        }\n        str += `${attr.name}:${JSON.stringify(attr.value)},`;\n    }\n    return `{${str.slice(0,-1)}}`;\n}\nfunction gen(node) {\n    if (node.type == 1) {\n        return generate(node); // 生产元素节点的字符串\n    } else {\n        let text = node.text; // 获取文本\n        // 如果是普通文本 不带{{}}\n\n        if(!defaultTagRE.test(text)){\n            return `_v(${JSON.stringify(text)})` // _v('hello {{ name }} world {{msg}} aa')   => _v('hello'+_s(name) +'world' + _s(msg))\n        }\n        let tokens = []; // 存放每一段的代码\n        let lastIndex = defaultTagRE.lastIndex = 0; // 如果正则是全局模式 需要每次使用前置为0\n        let match,index; // 每次匹配到的结果\n\n        while(match = defaultTagRE.exec(text)){\n            index = match.index; // 保存匹配到的索引\n            if(index > lastIndex){\n                tokens.push(JSON.stringify(text.slice(lastIndex,index)))\n            }\n            tokens.push(`_s(${match[1].trim()})`);\n            lastIndex = index+match[0].length;\n        }\n        if(lastIndex < text.length){\n            tokens.push(JSON.stringify(text.slice(lastIndex)));\n        }\n        return `_v(${tokens.join('+')})`;\n    }\n}\nfunction genChildren(el) {\n    const children = el.children;\n    if (children) { // 将所有转化后的儿子用逗号拼接起来\n        return children.map(child => gen(child)).join(',')\n    }\n}\nexport function generate(el) {\n    let children = genChildren(el);// 儿子的生成\n    let code = `_c('${el.tag}',${\n        el.attrs.length? `${genProps(el.attrs)}`:'undefined'\n    }${\n        children?`,${children}`:''\n    })`;\n    return code;\n}","//  <div id=\"app\">hello {{name}} <span>world</span> <p></p></div>\nimport { parseHTML } from \"./parse\";\nimport { generate } from \"./generate\";\n\n\nexport function compileToFunctions(template) {\n    // html模板 => render函数  (ast是用来描述代码的)\n    // 1.需要将html代码转化成\"ast\"语法树 可以用ast树来描述语言本身\n\n    // 前端必须要掌握的数据结构 (树)\n    let ast = parseHTML(template);\n\n    // 2.优化静态节点\n\n    // 3.通过这课树 重新的生成代码\n    let code = generate(ast);\n\n    // 4.将字符串变成函数 限制取值范围 通过with来进行取值 稍后调用render函数就可以通过改变this 让这个函数内部取到结果了\n    let render = new Function(`with(this){return ${code}}`);\n    return render;\n\n}\n\n\n","export function patch(oldVnode, vnode) {\n\n    if(!oldVnode){ // 如果是组件这个oldVnode是个undefined\n        return createElm(vnode); // vnode是组件中的内容\n    }\n\n    // 默认初始化时 是直接用虚拟节点创建出真实节点来 替换掉老节点\n    if (oldVnode.nodeType === 1) { // 真实的节点\n        let el = createElm(vnode); // 产生真实的dom \n        let parentElm = oldVnode.parentNode; // 获取老的app的父亲 =》 body\n\n        parentElm.insertBefore(el, oldVnode.nextSibling); // 当前的真实元素插入到app的后面\n        parentElm.removeChild(oldVnode); // 删除老的节点\n\n        return el;\n    } else {\n        // 在更新的时 拿老的虚拟节点 和 新的虚拟节点做对比 ，将不同的地方更新真实的dom\n        // 更新功能\n        // 那当前节点 整个\n        // 1.比较两个元素的标签 ，标签不一样直接替换掉即可\n        if (oldVnode.tag !== vnode.tag) {\n            // 老的dom元素\n            return oldVnode.el.parentNode.replaceChild(createElm(vnode), oldVnode.el);\n        }\n\n        // 2.有种可能是标签一样 <div>1</div>   <div>2</div>\n        //  文本节点的虚拟节点tag 都是undefined\n        if (!oldVnode.tag) { // 文本的比对\n            if (oldVnode.text !== vnode.text) {\n                return oldVnode.el.textContent = vnode.text\n            }\n        }\n\n        // 3.标签一样 并且需要开始比对标签的属性 和 儿子了\n        // 标签一样直接复用即可\n        let el = vnode.el = oldVnode.el; // 复用老节点\n\n        // 更新属性，用新的虚拟节点的属性和老的比较，去更新节点\n        // 新老属性做对比\n        updateProperties(vnode, oldVnode.data)\n        // 比较孩子\n\n        let oldChildren = oldVnode.children || [];\n        let newChildren = vnode.children || [];\n\n        if (oldChildren.length > 0 && newChildren.length > 0) {\n            // 老的有儿子 新的也有儿子  diff 算法\n            updateChildren(oldChildren, newChildren, el);\n        } else if (oldChildren.length > 0) { // 新的没有\n            el.innerHTML = '';\n        } else if (newChildren.length > 0) { // 老的没有\n            for (let i = 0; i < newChildren.length; i++) {\n                let child = newChildren[i];\n                // 浏览器有性能优化 不用自己在搞文档碎片了\n                el.appendChild(createElm(child));\n            }\n        }\n\n        // 儿子比较分为以下几种情况\n        // 老的有儿子 新的没儿子 \n        // 老的没儿子 新的有儿子\n    }\n}\n\nfunction isSameVnode(oldVnode, newVnode) {\n    return (oldVnode.tag == newVnode.tag) && (oldVnode.key == newVnode.key);\n}\n// 儿子间的比较\nfunction updateChildren(oldChildren, newChildren, parent) {\n\n\n    // 开头指针\n    let oldStartIndex = 0; // 老的索引\n    let oldStartVnode = oldChildren[0]; // 老的索引指向的节点\n    let oldEndIndex = oldChildren.length - 1;\n    let oldEndVnode = oldChildren[oldEndIndex];\n\n\n    let newStartIndex = 0; // 老的索引\n    let newStartVnode = newChildren[0]; // 老的索引指向的节点\n    let newEndIndex = newChildren.length - 1;\n    let newEndVnode = newChildren[newEndIndex];\n    // vue 中的diff算做了很多了优化\n    // DOM中操作有很多常见的逻辑 把节点插入到当前儿子的头部、尾部、儿子倒叙正序\n    // vue2中采用的是双指针的方式\n\n    // 在尾部添加\n\n    // 我要做一个循环，同时循环老的和新的，哪个先结束 循环就停止，将多余的删除或者添加进去\n    // 比较谁先循环停止  || 一个true就继续  && 俩都得true\n\n    function makeIndexByKey(children) {\n        let map = {}\n        children.forEach((item,index)=>{\n            if(item.key){\n                map[item.key] = index; // {A0,B:1,c:2,d:3}\n            }\n        });\n        return map;\n    }\n    let map = makeIndexByKey(oldChildren);\n    while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\n        if(!oldStartVnode){ // 指针指向了null 跳过这次的处理\n            oldStartVnode = oldChildren[++oldStartIndex]\n        }else if(!oldEndVnode){\n            oldEndVnode = oldChildren[--oldEndIndex];\n        }else if (isSameVnode(oldStartVnode, newStartVnode)) { // 如果俩人是同一个元素，比对儿子 \n            patch(oldStartVnode, newStartVnode); // 更新属性和再去递归更新子节点\n            oldStartVnode = oldChildren[++oldStartIndex];\n            newStartVnode = newChildren[++newStartIndex];\n        } else if (isSameVnode(oldEndVnode, newEndVnode)) {\n            patch(oldEndVnode, newEndVnode);\n            oldEndVnode = oldChildren[--oldEndIndex];\n            newEndVnode = newChildren[--newEndIndex];\n        } else if (isSameVnode(oldStartVnode, newEndVnode)) { // 老的尾部和新的头部比较\n            patch(oldStartVnode, newEndVnode);\n            // 将当前元素插入到尾部的 下一个元素的前面\n            parent.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling);\n            oldStartVnode = oldChildren[++oldStartIndex];\n            newEndVnode = newChildren[--newEndIndex];\n        } else if (isSameVnode(oldEndVnode, newStartVnode)) {\n            patch(oldEndVnode, newStartVnode);\n            parent.insertBefore(oldEndVnode.el, oldStartVnode.el);\n            oldEndVnode = oldChildren[--oldEndIndex];\n            newStartVnode = newChildren[++newStartIndex];\n            // 为什么要有key，循环的时候为什么不能用index作为key\n        } else {\n            // 儿子之间没关系 ..... 暴力比对\n            let moveIndex = map[newStartVnode.key]; // 拿到开头的虚拟节点的key 去老的中找\n            if(moveIndex == undefined){ // 不需要移动说明没有key复用的\n                parent.insertBefore(createElm(newStartVnode),oldStartVnode.el)\n            }else{\n                let moveVNode = oldChildren[moveIndex]; // 这个老的虚拟节点需要移动\n                patch(moveVNode,newStartVnode); // 比较属性和儿子\n                parent.insertBefore(moveVNode.el,oldStartVnode.el); // 移动功能,dom映射\n                oldChildren[moveIndex] = null;\n            }\n            newStartVnode = newChildren[++newStartIndex]; // 用新的不停的去老的里面找\n        }\n\n        // 反转节点， 头部移动尾部 尾部移动到头部\n    }\n    if (newStartIndex <= newEndIndex) {\n        for (let i = newStartIndex; i <= newEndIndex; i++) {\n            // 将新的多余的插入进去即可 ,可能是向前添加 还有可能是向后添加\n            // parent.appendChild(createElm(newChildren[i]));\n            // 向后插入 ele = null\n            // 像前插入 ele 就是当前像谁前面插入\n            let ele = newChildren[newEndIndex + 1] == null ? null : newChildren[newEndIndex + 1].el\n            parent.insertBefore(createElm(newChildren[i]), ele);\n        }\n    }\n    // 老的节点还有没处理的，说明这些老节点是不需要的节点，如过这里面有null说明，这个节点已经被处理过了，跳过即可\n    if(oldStartIndex <= oldEndIndex){\n        for (let i = oldStartIndex; i <= oldEndIndex; i++) {\n            let child = oldChildren[i];\n            if(child != null){\n                parent.removeChild(child.el);\n            }\n        }\n    }\n}\nfunction createComponent(vnode){\n    // 调用hook中init方法 \n    let i = vnode.data;\n    if((i = i.hook) && (i = i.init)){ // i就是init方法\n        i(vnode); // 内部会去new 组件 会将实例挂载在vnode上\n    }\n    if(vnode.componentInstance){ // 如果是组件返回true\n        return true;\n    }\n}\nexport function createElm(vnode) {\n    let { tag, children, key, data, text } = vnode;\n    if (typeof tag == 'string') { // 创建元素 放到vnode.el上\n\n        if(createComponent(vnode)){ // 组件渲染后的结果 放到当前组件的实例上 vm.$el\n            return vnode.componentInstance.$el; // 组件对应的dom元素\n        }\n        vnode.el = document.createElement(tag);\n        // 只有元素才有属性\n        updateProperties(vnode);\n        children.forEach(child => { // 遍历儿子 将儿子渲染后的结果扔到父亲中\n            vnode.el.appendChild(createElm(child));\n        })\n    } else { // 创建文件 放到vnode.el上\n        vnode.el = document.createTextNode(text);\n    }\n    return vnode.el;\n}\n\n// vue 的渲染流程 =》 先初始化数据 =》 将模板进行编译 =》 render函数 =》 生成虚拟节点 =》 生成真实的dom  =》 扔到页面上\nfunction updateProperties(vnode, oldProps = {}) {\n    let newProps = vnode.data || {}; // 新的属性\n    let el = vnode.el;\n    // 老的有新的没有 需要删除属性\n    for (let key in oldProps) {\n        if (!newProps[key]) {\n            el.removeAttribute(key); // 移除真实dom的属性\n        }\n    }\n    // 样式处理  老的 style={color:red}  新的 style={background:red}\n    let newStyle = newProps.style || {};\n    let oldStyle = oldProps.style || {};\n    // 老的样式中有 新的没有 删除老的样式\n    for (let key in oldStyle) {\n        if (!newStyle[key]) {\n            el.style[key] = '';\n        }\n    }\n    // 新的有 那就直接用新的去做更新即可\n    for (let key in newProps) {\n        if (key == 'style') { // {color:red}\n            for (let styleName in newProps.style) {\n                el.style[styleName] = newProps.style[styleName]\n            }\n        } else if (key == 'class') {\n            el.className = newProps.class;\n        } else {\n            el.setAttribute(key, newProps[key]);\n        }\n    }\n}\n// 下次在更新 vnode 会作为下一次的老的虚拟节点","import { patch } from \"./vdom/patch\";\nimport Watcher from \"./observer/watcher\";\n\nexport function lifecycleMixin(Vue) {\n    Vue.prototype._update = function(vnode) {\n        const vm = this;\n        const prevVnode = vm._vnode; // 如果第一次_vnode不存在\n        if (!prevVnode) {\n            //  这里需要区分一下 到底是首次渲染还是更新\n            // 用新的创建的元素 替换老的vm.$el\n            vm.$el = patch(vm.$el, vnode);\n        } else {\n            // 拿上一次的vnode 和 本次做对比\n            vm.$el = patch(prevVnode, vnode)\n        }\n        vm._vnode = vnode; // 保存第一次的vnode\n    }\n}\n\nexport function mountComponent(vm, el) {\n\n    vm.$el = el;\n    // 调用render方法去渲染 el属性\n    // 先调用render方法创建虚拟节点，在将虚拟节点渲染到页面上\n    callHook(vm, 'beforeMount')\n    let updateComponent = () => {\n        vm._update(vm._render()); // 渲染 、 更新\n    }\n    // 这个watcher是用于渲染的 目前没有任何功能  updateComponent()\n\n    // 初始化就会创建watcher\n    let watcher = new Watcher(vm, updateComponent, () => {\n        callHook(vm, 'updated')\n    }, true); // 渲染watcher 只是个名字\n\n    // 要把属性 和 watcher绑定在一起 \n\n    callHook(vm, 'mounted');\n}\n\nexport function callHook(vm, hook) {\n    const handlers = vm.$options[hook]; // vm.$options.created  = [a1,a2,a3]\n    if (handlers) {\n        for (let i = 0; i < handlers.length; i++) {\n            handlers[i].call(vm); // 更改生命周期中的this\n        }\n    }\n}","import { initState } from \"./state\";\nimport { compileToFunctions } from \"./compiler/index\";\nimport { mountComponent, callHook } from \"./lifecycle\";\nimport { mergeOptions } from \"./util\";\n\nexport function initMixin(Vue) {\n    Vue.prototype._init = function(options) {\n        const vm = this;\n        // Vue.options, 用户定义的\n        vm.$options = mergeOptions(vm.constructor.options, options); // 需要将用户自定义的options 和全局的options做合并\n        callHook(vm, 'beforeCreate')\n\n        initState(vm); // 初始化状态\n        callHook(vm, 'created')\n\n        if (vm.$options.el) { // 挂载的逻辑\n            vm.$mount(vm.$options.el)\n        }\n    }\n    // 1.render 2.template 3.外部template  （el存在的时候）\n    Vue.prototype.$mount = function(el) {\n        // 挂载操作\n        const vm = this;\n        const options = vm.$options;\n        el = document.querySelector(el);\n      \n\n        if (!options.render) {\n            let template = options.template;\n            if (!template && el) {\n                template = el.outerHTML;\n            }\n            // template => render方法\n            // 1.处理模板变为ast树 2.标记静态节点 3.codegen=>return 字符串 4.new Function + with (render函数)\n            const render = compileToFunctions(template);\n            options.render = render\n        }\n        // 渲染时用的都是这个render方法\n\n        // 需要挂载这个组件\n        mountComponent(vm, el);\n    }\n}","import { isReservedTag } from \"../util\";\n\nexport function renderMixin(Vue) { // 用对象来描述dom的解构\n    Vue.prototype._c = function() { // 创建虚拟dom元素\n        return createElement(this, ...arguments);\n    }\n\n    // 1.当结果是对象时 会对这个对象取值\n    Vue.prototype._s = function(val) { // stringify\n        return val == null ? '' : (typeof val == 'object') ? JSON.stringify(val) : val;\n    }\n    Vue.prototype._v = function(text) { // 创建虚拟dom文本元素\n        return createTextVnode(text);\n    }\n    Vue.prototype._render = function() { // _render = render\n        const vm = this;\n        const render = vm.$options.render;\n        let vnode = render.call(vm);\n        return vnode;\n    }\n}\n// _c('div',{},_v(),_c())\nfunction createElement(vm, tag, data = {}, ...children) {\n    // 如果是组件 我产生虚拟节点时需要把组件的构造函数传入\n    // new Ctor().$mount()\n    // 根据tag名字 需要判断他是不是一个组件\n\n    if (isReservedTag(tag)) {\n        return vnode(tag, data, data.key, children)\n    } else {\n        let Ctor = vm.$options.components[tag];\n        // 创建组件的虚拟节点  children就是组件的插槽了\n        return createComponent(vm, tag, data, data.key, children, Ctor)\n    }\n}\n\nfunction createComponent(vm, tag, data, key, children, Ctor) {\n    const baseCtor = vm.$options._base; // Vue\n    if (typeof Ctor == 'object') {\n        Ctor = baseCtor.extend(Ctor)\n    }\n    // 给组件增加生命周期 \n    data.hook = { // 稍后初始化组件时 会调用此init方法\n        init(vnode) {\n            let child = vnode.componentInstance = new Ctor({}); // vm.$el\n            child.$mount(); // 挂载逻辑 组件的$mount方法中是不传递参数的  \n            // vnode.componentInstance.$el 指代的是当前组件的真实dom\n        }\n    }\n    // vue-component-0-app\n    return vnode(`vue-component-${Ctor.cid}-${tag}`, data, key, undefined, undefined, { Ctor, children });\n}\n\nfunction createTextVnode(text) {\n    return vnode(undefined, undefined, undefined, undefined, text);\n}\n// 用来产生虚拟dom的,操作真实dom浪费性能\nfunction vnode(tag, data, key, children, text, componentOptions) {\n    return {\n        tag,\n        data,\n        key,\n        children,\n        text,\n        componentOptions // 组件的虚拟节点他多了一个componentOptions属性 用来保存当前组件的构造函数和他的插槽\n    }\n}","import { mergeOptions } from \"../util\";\n\nexport default function initExtend(Vue){\n    let cid = 0;\n    // 核心就是创造一个子类继承我们的父类\n    Vue.extend = function (extendOptions) {\n        // 如果对象相同 应该复用构造函数 （缓存）\n        const Super = this;\n        const Sub = function VueComponent(options) {\n            this._init(options);\n        }\n        Sub.cid = cid++;\n        // 子类要继承父类原型上的方法, 原型继承\n        Sub.prototype = Object.create(Super.prototype);\n        Sub.prototype.constructor = Sub;\n        // 处理其他的属性 mixin component ....\n        Sub.options = mergeOptions(\n            Super.options,\n            extendOptions\n        )\n        Sub.components = Super.components;\n        // ....    \n        return Sub;\n    }\n}\n\n\n// 组件的渲染流程\n// 1.调用Vue.component\n// 2.内部用的是Vue.extend 就是产生一个子类来继承父类 \n// 3.等会创建子类实例时会调用父类的_init方法，在$mount即可\n// 4.组件的初始化就是 new 这个组件的构造函数并且调用$mount方法\n// 5.创建虚拟节点 根据标签晒出组件对应，生成组件的虚拟节点 componentOptions里面包含Ctor,children \n\n// 6.组件创建真实dom时 （先渲染的是父组件） 遇到是组件的虚拟节点时，去调用init方法，让组件初始化并挂载， 组件的$mount无参数会把渲染后的dom放到 vm.$el上 =》 vnode.componentInstance中,这样渲染时就 获取这个对象的$el属性来渲染","import { mergeOptions } from \"../util\";\nimport initExtend from './extend'\nexport function initGlobalApi(Vue){\n    Vue.options = {}; // Vue.components Vue.diretive \n    // initMixin()\n    Vue.mixin = function (mixin) {\n       // 合并对象  （我先考虑生命周期） 不考虑其他的合并 data computed watch\n       this.options = mergeOptions(this.options,mixin);\n    }\n\n    Vue.options._base = Vue; // _base 最终的Vue的构造函数我保留在options对象中\n    Vue.options.components = {}; // 全局组件\n\n\n    initExtend(Vue);\n\n    // initAssetRegisters....  directive filter\n    Vue.component = function (id,definition) {\n        // Vue.extend \n        definition.name = definition.name || id; // 默认会以name属性为准\n        // 根据当前组件对象 生成了一个子类的构造函数\n        // 用的时候得 new definition().$mount()\n        definition = this.options._base.extend(definition); // 永远是父类\n\n        // Vue.component 注册组件 等价于  Vue.options.components[id] = definition\n        Vue.options.components[id] = definition;\n    }\n}","// es6的类的写法 一个整体\n\nimport { initMixin } from \"./init\";\nimport { lifecycleMixin } from \"./lifecycle\";\nimport { renderMixin } from \"./vdom/index\";\nimport {initGlobalApi} from './global-api/index'\nimport {stateMixin} from './state'\n// 用Vue的构造函数  创建组件\nfunction Vue(options){\n   this._init(options); // 组件初始化的入口\n}\n\n\n// 原型方法\ninitMixin(Vue); // init方法\nlifecycleMixin(Vue); // _update\nrenderMixin(Vue); // _render\nstateMixin(Vue); \n\n// 静态方法 Vue.component Vue.directive Vue.extend Vue.mixin ...\n\ninitGlobalApi(Vue);\n\n// 初始化方法\n\n// 为了看到diff的整个流程 创建两个虚拟节点来进行比对操作\n// import {compileToFunctions} from './compiler/index';\n// import {createElm,patch} from './vdom/patch'\n// let vm1 = new Vue({data:{name:'zf'}});\n// let render1 = compileToFunctions(`<div>\n//    <li style=\"background:red\" key=\"A\">A</li>\n//    <li style=\"background:yellow\" key=\"B\">B</li>\n//    <li style=\"background:pink\" key=\"C\">C</li>\n//    <li style=\"background:green\" key=\"D\">D</li>\n//    <li style=\"background:green\" key=\"F\">F</li>\n// </div>`);\n// let vnode1 = render1.call(vm1); // render方法返回的是虚拟dom\n\n// document.body.appendChild(createElm(vnode1))\n\n// let vm2 = new Vue({data:{name:'jw'}});\n// let render2 = compileToFunctions(`<div>\n//    <li style=\"background:green\" key=\"M\">M</li>\n//    <li style=\"background:pink\" key=\"B\">B</li>\n//    <li style=\"background:yellow\" key=\"A\">A</li>\n//    <li style=\"background:red\" key=\"Q\">Q</li>\n// </div>`);\n// let vnode2 = render2.call(vm2); // render方法返回的是虚拟dom\n\n// // 用新的虚拟节点对比老的虚拟节点，找到差异 去更新老的dom元素\n\n\n// setTimeout(() => {\n//    patch(vnode1,vnode2); // 传入新的虚拟节点和老的 做一个对比\n// }, 3000);\n\n\nexport default Vue;"],"names":["oldArrayProtoMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","args","result","apply","inserted","ob","__ob__","slice","observeArray","dep","notify","proxy","vm","data","key","defineProperty","get","set","newValue","target","value","enumerable","configurable","LIFECYCLE_HOOKS","strats","components","parentVal","childVal","res","mergeHook","childValue","concat","hook","mergeOptions","parent","child","options","mergeField","hasOwnProperty","callbacks","pending","flushCallbacks","length","cb","shift","timerFunc","Promise","resolve","then","MutationObserver","observe","textNode","document","createTextNode","characterData","textContent","setImmediate","setTimeout","nextTick","push","makeMap","str","mapping","list","split","i","isReservedTag","id","Dep","subs","addDep","watcher","update","stack","pushTarget","popTarget","pop","Observer","isArray","__proto__","walk","item","keys","defineReactive","childDep","depend","Watcher","exprOrFn","user","lazy","dirty","deps","depsId","Set","getter","path","obj","has","add","addSub","call","oldValue","queueWatcher","queue","flushSchedulerQueue","run","initState","opts","$options","props","initData","computed","initComputed","watch","initWatch","_data","watchers","_computedWatchers","userDef","defineComputed","sharedPropertyDefinition","createComputedGetter","evaluate","handler","handle","createWatcher","$watch","stateMixin","Vue","$nextTick","immediate","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","createASTElement","tagName","attrs","tag","type","children","root","currentParent","start","element","end","chars","text","trim","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genProps","JSON","stringify","gen","node","generate","test","tokens","lastIndex","index","exec","join","genChildren","el","map","code","compileToFunctions","template","ast","render","Function","patch","oldVnode","vnode","createElm","nodeType","parentElm","parentNode","insertBefore","nextSibling","removeChild","replaceChild","updateProperties","oldChildren","newChildren","updateChildren","innerHTML","appendChild","isSameVnode","newVnode","oldStartIndex","oldStartVnode","oldEndIndex","oldEndVnode","newStartIndex","newStartVnode","newEndIndex","newEndVnode","makeIndexByKey","moveIndex","undefined","moveVNode","ele","createComponent","init","componentInstance","$el","createElement","oldProps","newProps","removeAttribute","newStyle","style","oldStyle","styleName","className","setAttribute","lifecycleMixin","_update","prevVnode","_vnode","mountComponent","callHook","updateComponent","_render","handlers","initMixin","_init","constructor","$mount","querySelector","outerHTML","renderMixin","_c","arguments","_s","val","_v","createTextVnode","Ctor","baseCtor","_base","extend","cid","componentOptions","initExtend","extendOptions","Super","Sub","VueComponent","initGlobalApi","mixin","component","definition"],"mappings":"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"}