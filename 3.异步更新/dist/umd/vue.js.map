{"version":3,"file":"vue.js","sources":["../../src/util.js","../../src/global-api/index.js","../../src/compiler/generate.js","../../src/compiler/parse.js","../../src/compiler/index.js","../../src/vdom/patch.js","../../src/observer/dep.js","../../src/observer/watcher.js","../../src/lifecycle.js","../../src/observer/array.js","../../src/observer/index.js","../../src/state.js","../../src/init.js","../../src/vdom/index.js","../../src/index.js"],"sourcesContent":["export function proxy(vm, data, key) {\r\n    Object.defineProperty(vm, key, { // vm.a\r\n        get() {\r\n            return vm[data][key]; // vm._data.a\r\n        },\r\n        set(newValue) { // vm.a = 100;\r\n            vm[data][key] = newValue // vm._data.a = 100;\r\n        }\r\n    })\r\n}\r\n\r\nexport function defineProperty(target, key, value) {\r\n    Object.defineProperty(target, key, {\r\n        enumerable: false, // 不能被枚举，不能被循环出来\r\n        configurable: false,\r\n        value\r\n    });\r\n}\r\n\r\nexport const LIFECYCLE_HOOKS = [\r\n    'beforeCreate',\r\n    'created',\r\n    'beforeMount',\r\n    'mounted',\r\n    'beforeUpdate',\r\n    'updated',\r\n    'beforeDestroy',\r\n    'destroyed'\r\n];\r\n\r\nconst strats = {};\r\nstrats.data = function(parentVal, childValue) {\r\n    return childValue; // 这里应该有合并data的策略\r\n}\r\n// strats.computed = function() {}\r\n// strats.watch = function() {}\r\n\r\nfunction mergeHook(parentVal, childValue) { // 生命周期的合并\r\n    if(childValue){\r\n        if(parentVal){\r\n            return parentVal.concat(childValue); // 爸爸和儿子进行拼接\r\n        }else{\r\n            return [childValue]; //儿子需要转化成数组\r\n        }\r\n    }else{\r\n        return parentVal; // 不合并了 采用父亲的\r\n    }\r\n}\r\nLIFECYCLE_HOOKS.forEach(hook => {\r\n    strats[hook] = mergeHook\r\n})\r\nexport function mergeOptions(parent, child) {\r\n    // 遍历父亲 ，可能是父亲有 儿子没有 \r\n    const options = {};\r\n    for (let key in parent) { // 父亲和儿子都有在这就处理了\r\n        mergeField(key);\r\n    }\r\n    // 儿子有父亲没有 在这处理\r\n    for (let key in child) { // 将儿子多的赋予到父亲上\r\n        if (!parent.hasOwnProperty(key)) {\r\n            mergeField(key);\r\n        }\r\n    }\r\n\r\n    function mergeField(key) { // 合并字段\r\n        // 根据key 不同的策略来进行合并 \r\n        if (strats[key]) {\r\n            options[key] = strats[key](parent[key], child[key]);\r\n        } else {\r\n            // todo默认合并\r\n            options[key] = child[key]\r\n        }\r\n    }\r\n\r\n\r\n    return options;\r\n}\r\nconst callbacks = [];\r\nlet pending = false;\r\nfunction flushCallbacks(){\r\n    while (callbacks.length) {\r\n        let cb = callbacks.shift();\r\n        cb();\r\n    } // 让nextTick中传入的方法依次执行\r\n    pending = false // 标识已经执行完毕\r\n}\r\nlet timerFunc;\r\nif(Promise){\r\n    timerFunc = ()=>{\r\n        Promise.resolve().then(flushCallbacks); // 异步处理更新\r\n    }\r\n}else if(MutationObserver){ // 可以监控dom变化,监控完毕后是异步更新\r\n    let observe = new MutationObserver(flushCallbacks);\r\n    let textNode = document.createTextNode(1); // 先创建一个文本节点\r\n    observe.observe(textNode,{characterData:true}); // 观测文本节点中的内容\r\n    timerFunc = ()=>{\r\n        textNode.textContent = 2; // 文中的内容改成2\r\n    }\r\n}else if(setImmediate){\r\n    timerFunc = ()=>{\r\n        setImmediate(flushCallbacks)\r\n    }\r\n}else{\r\n    timerFunc = ()=>{\r\n        setTimeout(flushCallbacks)\r\n    }\r\n}\r\nexport function nextTick(cb){ // 因为内部会调用nextTick 用户也会调用，但是异步只需要一次\r\n    callbacks.push(cb);\r\n    if(!pending){\r\n        // vue3 里的nextTick原理就是promise.then 没有做兼容性处理了\r\n        timerFunc();// 这个方法是异步方法 做了兼容处理了\r\n        pending = true;\r\n    }\r\n}","import { mergeOptions } from \"../util\";\r\n\r\nexport function initGlobalApi(Vue){\r\n    Vue.options = {}; // Vue.components Vue.diretive \r\n    Vue.mixin = function (mixin) {\r\n       // 合并对象  （我先考虑生命周期） 不考虑其他的合并 data computed watch\r\n       this.options = mergeOptions(this.options,mixin);\r\n    }\r\n\r\n    // Vue.options, options\r\n    // 用户 new Vue({created(){}})\r\n}","// 编写<div id=\"app\" style=\"color:red\"> hello {{name}} <span>hello</span></div>\r\n\r\n// 结果:render(){\r\n//    return _c('div',{id:'app',style:{color:'red'}},_v('hello'+_s(name)),_c('span',null,_v('hello')))\r\n//}\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n//  语法层面的转义\r\nfunction genProps(attrs) { //  id   \"app\"     / style  \"fontSize:12px;color:red\"\r\n    let str = '';\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i];\r\n        if (attr.name === 'style') {\r\n            let obj = {}; // 对样式进行特殊的处理 \r\n            attr.value.split(';').forEach(item => {\r\n                let [key, value] = item.split(':');\r\n                obj[key] = value;\r\n            });\r\n            attr.value = obj;\r\n        }\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`;\r\n    }\r\n    return `{${str.slice(0,-1)}}`;\r\n}\r\nfunction gen(node) {\r\n    if (node.type == 1) {\r\n        return generate(node); // 生产元素节点的字符串\r\n    } else {\r\n        let text = node.text; // 获取文本\r\n        // 如果是普通文本 不带{{}}\r\n\r\n        if(!defaultTagRE.test(text)){\r\n            return `_v(${JSON.stringify(text)})` // _v('hello {{ name }} world {{msg}} aa')   => _v('hello'+_s(name) +'world' + _s(msg))\r\n        }\r\n        let tokens = []; // 存放每一段的代码\r\n        let lastIndex = defaultTagRE.lastIndex = 0; // 如果正则是全局模式 需要每次使用前置为0\r\n        let match,index; // 每次匹配到的结果\r\n\r\n        while(match = defaultTagRE.exec(text)){\r\n            index = match.index; // 保存匹配到的索引\r\n            if(index > lastIndex){\r\n                tokens.push(JSON.stringify(text.slice(lastIndex,index)))\r\n            }\r\n            tokens.push(`_s(${match[1].trim()})`);\r\n            lastIndex = index+match[0].length;\r\n        }\r\n        if(lastIndex < text.length){\r\n            tokens.push(JSON.stringify(text.slice(lastIndex)));\r\n        }\r\n        return `_v(${tokens.join('+')})`;\r\n    }\r\n}\r\nfunction genChildren(el) {\r\n    const children = el.children;\r\n    if (children) { // 将所有转化后的儿子用逗号拼接起来\r\n        return children.map(child => gen(child)).join(',')\r\n    }\r\n}\r\nexport function generate(el) {\r\n    let children = genChildren(el);// 儿子的生成\r\n    let code = `_c('${el.tag}',${\r\n        el.attrs.length? `${genProps(el.attrs)}`:'undefined'\r\n    }${\r\n        children?`,${children}`:''\r\n    })`;\r\n    return code;\r\n}","\r\n\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // 标签名\r\n// ?:匹配不捕获\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // </my:xx>\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的    aaa=\"aaa\"  a='aaa'   a=aaa\r\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >    >   <div></div>  <br/>\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n// 数据结构 树、栈、链表、队列、\r\nexport function parseHTML(html) {\r\n    function createASTElement(tagName, attrs) {\r\n        return {\r\n            tag: tagName, // 标签名\r\n            type: 1, // 元素类型\r\n            children: [], // 孩子列表\r\n            attrs, // 属性集合\r\n            parent: null // 父元素\r\n        }\r\n    }\r\n    let root;\r\n    let currentParent;\r\n    let stack = [];\r\n    function start(tagName, attrs) { // 创建一个元素 作为根元素\r\n        let element = createASTElement(tagName, attrs);\r\n        if(!root){\r\n            root = element;\r\n        }\r\n        currentParent = element; // 当前解析的标签 保存起来\r\n        stack.push(element); // 将生产的ast元素放到栈中\r\n    }\r\n\r\n    // <div> <p></p> hello</div>currentParent=p\r\n    //标签闭合方法只是找到当前闭合元素的父子级关系\r\n    function end(tagName) { // 在结尾标签处 创建父子关系\r\n        let element = stack.pop(); // 取出栈中的最后一个\r\n        currentParent = stack[stack.length-1];\r\n        if(currentParent){ // 在闭合时可以知道这个标签的父亲是谁\r\n            element.parent = currentParent;\r\n            currentParent.children.push(element);\r\n        }\r\n    }\r\n    //文本没有闭合，默认栈里面最后一个标签的内容文本\r\n    function chars(text) {\r\n        text = text.trim();\r\n        if(text){\r\n            currentParent.children.push({\r\n                type:3,\r\n                text\r\n            })\r\n        }\r\n    }\r\n\r\n    while (html) { // 只要html不为空字符串就一直解析\r\n        let textEnd = html.indexOf('<');\r\n        if (textEnd == 0) {\r\n            // 肯定是标签\r\n            const startTagMatch = parseStartTag(); // 开始标签匹配的结果 处理开始，\r\n            if (startTagMatch) {\r\n                start(startTagMatch.tagName, startTagMatch.attrs);\r\n                continue;\r\n            }\r\n            const endTagMatch = html.match(endTag);\r\n            if (endTagMatch) { // 处理结束标签\r\n                advance(endTagMatch[0].length);\r\n                end(endTagMatch[1]); // 将结束标签传入 \r\n                continue;\r\n            }\r\n        }\r\n        let text;\r\n        if (textEnd > 0) { // 是处理文本\r\n            text = html.substring(0, textEnd)\r\n        }\r\n        if (text) { // 处理文本\r\n            advance(text.length);\r\n            chars(text);\r\n        }\r\n\r\n    }\r\n\r\n    function advance(n) { // 将字符串进行截取操作 在更新html内容\r\n        html = html.substring(n)\r\n    }\r\n\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen);\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1],\r\n                attrs: []\r\n            }\r\n            advance(start[0].length); // 删除开始标签\r\n            // 如果直接是闭合标签了 说明没有属性\r\n            let end, attr;\r\n            // 不是结尾标签 能匹配到属性\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] });\r\n                advance(attr[0].length); // 去掉当前属性\r\n            }\r\n            //如果没有end则说明不是一个正确的标签\r\n            if (end) { // >  删除匹配到的结束标签\r\n                advance(end[0].length);\r\n                return match;\r\n            }\r\n        }\r\n    }\r\n\r\n    return root;\r\n}","//  <div id=\"app\">hello {{name}} <span>world</span> <p></p></div>\r\nimport { generate } from \"./generate\";\r\nimport { parseHTML } from \"./parse\";\r\n\r\n\r\nexport function compileToFunctions(template) {\r\n    // html模板 => render函数  (ast是用来描述代码的)\r\n    // 1.需要将html代码转化成\"ast\"语法树 可以用ast树来描述语言本身\r\n\r\n    // 前端必须要掌握的数据结构 (树)\r\n    let ast = parseHTML(template);\r\n\r\n    // 2.优化静态节点\r\n\r\n    // 3.通过这课树 重新的生成代码\r\n    let code = generate(ast);\r\n    console.log(code)\r\n    // 4.将字符串变成函数 限制取值范围 通过with来进行取值 稍后调用render函数就可以通过改变this 让这个函数内部取到结果了\r\n    let render = new Function(`with(this){return ${code}}`);\r\n    return render;\r\n\r\n}\r\n\r\n\r\n","export function patch(oldVnode,vnode){\r\n\r\n    // oldVnode => id#app   vnode 我们根据模板产生的虚拟dom\r\n\r\n    // 将虚拟节点转化成真实节点\r\n    let el = createElm(vnode); // 产生真实的dom \r\n    let parentElm = oldVnode.parentNode; // 获取老的app的父亲 =》 body\r\n\r\n    parentElm.insertBefore(el,oldVnode.nextSibling); // 当前的真实元素插入到app的后面\r\n    parentElm.removeChild(oldVnode); // 删除老的节点\r\n\r\n    return el;\r\n\r\n}\r\n\r\nfunction createElm(vnode){\r\n    let {tag,children,key,data,text} = vnode;\r\n    // 创建元素 放到vnode.el上\r\n    if(typeof tag == 'string'){\r\n        vnode.el = document.createElement(tag);\r\n\r\n        // 只有元素才有属性\r\n        updateProperties(vnode);\r\n        children.forEach(child=>{ // 遍历儿子 将儿子渲染后的结果扔到父亲中\r\n            vnode.el.appendChild(createElm(child));\r\n        })\r\n    }else{ // 创建文件 放到vnode.el上\r\n        vnode.el = document.createTextNode(text);\r\n    }\r\n    return vnode.el;\r\n}\r\n\r\n// vue 的渲染流程 =》 先初始化数据 =》 将模板进行编译 =》 render函数 =》 生成虚拟节点 =》 生成真实的dom  =》 扔到页面上\r\n\r\n\r\nfunction updateProperties(vnode){\r\n    let el = vnode.el;\r\n    let newProps = vnode.data || {};\r\n    for(let key in newProps){\r\n        if(key == 'style'){ // {color:red}\r\n            for(let styleName in newProps.style){\r\n                el.style[styleName] = newProps.style[styleName]\r\n            }\r\n        }else if(key == 'class'){\r\n            el.className = el.class;\r\n        }else{\r\n            el.setAttribute(key,newProps[key]);\r\n        }\r\n    }\r\n}\r\n","let id = 0;\r\nclass Dep{\r\n    constructor(){\r\n        this.subs = [];\r\n        this.id = id++;\r\n    }\r\n    depend(){\r\n        // 我们希望 watcher 可以存放dep \r\n        Dep.target.addDep(this); // 实现双向记忆的，让watcher记住dep的同时 ，让dep 也记住watcher\r\n        // this.subs.push(Dep.target);\r\n    }\r\n    addSub(watcher){\r\n        this.subs.push(watcher);\r\n    }\r\n    notify(){\r\n        this.subs.forEach(watcher=>watcher.update());\r\n    }\r\n}\r\nDep.target = null; // 静态属性 就一份\r\nexport function pushTarget(watcher){\r\n    Dep.target = watcher;// 保留watcher\r\n}\r\n\r\nexport function popTarget(){\r\n    Dep.target = null; // 将变量删除掉\r\n}\r\nexport default Dep\r\n// 多对多的关系 一个属性有一个dep是用来收集watcher的\r\n// dep 可以存多个watcher    \r\n// 一个watcher可以对应多个dep ","import { pushTarget, popTarget } from \"./dep\";\r\nimport { nextTick } from \"../util\";\r\n\r\nlet id = 0;\r\nclass Watcher { // vm.$watch\r\n    // vm实例\r\n    // exprOrFn  vm._update(vm._render())\r\n    constructor(vm, exprOrFn, cb, options) {\r\n        this.vm = vm;\r\n        this.exprOrFn = exprOrFn;\r\n        this.cb = cb;\r\n        this.options = options;\r\n        this.user = options.user; // 这是一个用户watcher\r\n        \r\n        this.id = id++; // watcher的唯一标识\r\n        this.deps = []; // watcher记录有多少dep依赖他\r\n        this.depsId = new Set();\r\n        if (typeof exprOrFn == 'function') {\r\n            this.getter = exprOrFn\r\n        }else{\r\n            this.getter = function () { // exprOrFn 可能传递过来的是一个字符串a\r\n                // 当去当前实例上取值时 才会触发依赖收集\r\n                let path = exprOrFn.split('.'); // ['a','a','a']\r\n                let obj = vm;\r\n                for(let i = 0; i < path.length;i++){\r\n                    obj = obj[path[i]]// vm.a   // vm.a.a\r\n                }\r\n                return obj;\r\n            }\r\n        }\r\n        // 默认会先调用一次get方法 ，进行取值 将结果保留下来\r\n        this.value = this.get(); // 默认会调用get方法 \r\n    }\r\n    addDep(dep) {\r\n        let id = dep.id;\r\n        if (!this.depsId.has(id)) {\r\n            this.deps.push(dep);\r\n            this.depsId.add(id);\r\n            dep.addSub(this)\r\n        }\r\n    }\r\n    get() {\r\n        // Dep.target = watcher\r\n        pushTarget(this); // 当前watcher实例\r\n        let result = this.getter(); // 调用exprOrFn  渲染页面 取值（执行了get方法）  render方法 with(vm){_v(msg)}\r\n        popTarget(); //渲染完成后 将watcher删掉了\r\n        return result\r\n    }\r\n    run() {\r\n        let newValue = this.get(); // 渲染逻辑\r\n        let oldValue = this.value;\r\n        this.value = newValue; // 更新一下老值\r\n        if(this.user){\r\n            this.cb.call(this.vm,newValue,oldValue);\r\n        }\r\n    }\r\n    update() {\r\n        // 这里不要每次都调用get方法 get方法会重新渲染页面\r\n        queueWatcher(this); // 暂存的概念\r\n        //this.get(); // 重新渲染\r\n    }\r\n}\r\nlet queue = []; // 将需要批量更新的watcher 存到一个队列中，稍后让watcher执行\r\nlet has = {};\r\nlet pending = false;\r\nfunction flushSchedulerQueue() {\r\n    queue.forEach(watcher =>{ watcher.run();\r\n        if(!watcher.user){\r\n            watcher.cb()\r\n        }\r\n    });\r\n    queue = [];\r\n    has = {};\r\n    pending = false;\r\n}\r\nfunction queueWatcher(watcher) {\r\n    const id = watcher.id; // 对watcher进行去重\r\n    if (has[id] == null) {\r\n        queue.push(watcher); // 并且将watcher存到队列中\r\n        has[id] = true;\r\n        // 等待所有同步代码执行完毕后在执行\r\n        if (!pending) { // 如果还没清空队列，就不要在开定时器了  防抖处理 \r\n            nextTick(flushSchedulerQueue);\r\n            pending = true;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Watcher\r\n\r\n// 在数据劫持的时候 定义defineProperty的时候 已经给每个属性都增加了一个dep\r\n\r\n// 1.是想把这个渲染watcher 放到了Dep.target属性上\r\n// 2.开始渲染 取值会调用get方法,需要让这个属性的dep 存储当前的watcher\r\n// 3.页面上所需要的属性都会将这个watcher存在自己的dep中\r\n// 4.等会属性更新了 就重新调用渲染逻辑 通知自己存储的watcher来更新","import { patch } from \"./vdom/patch\";\r\nimport Watcher from \"./observer/watcher\";\r\n\r\nexport function lifecycleMixin(Vue){\r\n    Vue.prototype._update = function (vnode) {\r\n        const vm = this;\r\n\r\n        // 用新的创建的元素 替换老的vm.$el\r\n        vm.$el = patch(vm.$el,vnode)\r\n    }\r\n}\r\n\r\nexport function mountComponent(vm, el) {\r\n\r\n    vm.$el = el;\r\n    // 调用render方法去渲染 el属性\r\n    // 先调用render方法创建虚拟节点，在将虚拟节点渲染到页面上\r\n    callHook(vm,'beforeMount')\r\n    let updateComponent = ()=>{\r\n        vm._update(vm._render()); // 渲染 、 更新\r\n    }\r\n    // 这个watcher是用于渲染的 目前没有任何功能  updateComponent()\r\n\r\n    // 初始化就会创建watcher\r\n    let watcher = new Watcher(vm,updateComponent,()=>{\r\n        callHook(vm,'updated')\r\n    },true); // 渲染watcher 只是个名字\r\n\r\n    // 要把属性 和 watcher绑定在一起 \r\n    \r\n    callHook(vm,'mounted');\r\n}\r\n\r\nexport function callHook(vm,hook){\r\n    const handlers = vm.$options[hook]; // vm.$options.created  = [a1,a2,a3]\r\n    if(handlers){\r\n        for(let i = 0; i<handlers.length;i++){\r\n            handlers[i].call(vm); // 更改生命周期中的this\r\n        }\r\n    }\r\n}","// 拿到数组原型上的方法 （原来的方法）\r\nlet oldArrayProtoMethods = Array.prototype;\r\n// 继承一下   ES5的方法\r\nexport let arrayMethods = Object.create(oldArrayProtoMethods);\r\nlet methods = [\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n]\r\nmethods.forEach(method => {\r\n    arrayMethods[method] = function(...args) { // this就是observer里的value\r\n        // 当调用数组我们劫持后的这7个方法 页面应该更新 \r\n        // 我要知道数组对应哪个dep\r\n        \r\n        const result = oldArrayProtoMethods[method].apply(this, args);\r\n        let inserted;\r\n        let ob = this.__ob__;\r\n        switch (method) {\r\n            case 'push': // arr.push({a:1},{b:2})\r\n            case 'unshift': //这两个方法都是追加 追加的内容可能是对象类型，应该被再次进行劫持\r\n                inserted = args;\r\n                break;\r\n            case 'splice': // vue.$set原理\r\n                inserted = args.slice(2); // arr.splice(0,1,{a:1},{a:1},{a:1})\r\n            default:\r\n                break;\r\n        }\r\n        if(inserted) ob.observeArray(inserted); // 给数组新增的值也要进行观测\r\n        ob.dep.notify(); // 通知数组更新\r\n        return result;\r\n    }\r\n});","import { arrayMethods } from \"./array\";\r\nimport { defineProperty } from \"../util\";\r\nimport Dep from \"./dep\";\r\nclass Observer {\r\n  constructor(value) {\r\n    this.dep = new Dep(); // value ={}  value = []\r\n    // 使用defineProperty 重新定义属性\r\n    // 判断一个对象是否被观测过看他有没有 __ob__这个属性\r\n    defineProperty(value, \"__ob__\", this);\r\n    if (Array.isArray(value)) {\r\n      // 我希望调用push shift unshift splice sort reverse pop\r\n      value.__proto__ = arrayMethods;\r\n      this.observeArray(value); // 数组中普通类型是不做观测的\r\n    } else {\r\n      this.walk(value);\r\n    }\r\n  }\r\n  observeArray(value) {\r\n    value.forEach((item) => {\r\n      observe(item); // 观测数组中的对象类型\r\n    });\r\n  }\r\n  walk(data) {\r\n    let keys = Object.keys(data); // 获取对象的key\r\n    keys.forEach((key) => {\r\n      defineReactive(data, key, data[key]); // Vue.util.defineReactive\r\n    });\r\n  }\r\n}\r\n// 封装 继承\r\nfunction defineReactive(data, key, value) {\r\n  // 获取到数组对应的dep\r\n  let childDep = observe(value); // 如果值是对象类型在进行观测\r\n\r\n  let dep = new Dep(); // 每个属性都有一个dep\r\n  // 当页面取值时 说明这个值用来渲染了，将这个watcher和这个属性对应起来\r\n  Object.defineProperty(data, key, {\r\n    // dep 实例被隐式地包含在其作用域内\r\n    get() {\r\n      // 依赖收集\r\n      if (Dep.target) {\r\n        // 让这个属性记住这个watcher\r\n        dep.depend();\r\n        if (childDep) {\r\n          // 可能是数组可能是对象\r\n          // 默认给数组增加了一个dep属性，当对数组这个对象取值的时候\r\n          childDep.dep.depend(); // 数组存起来了这个渲染watcher\r\n        }\r\n      }\r\n      return value;\r\n    },\r\n    set(newValue) {\r\n      // 依赖更新\r\n      if (newValue === value) return;\r\n      observe(newValue); // 如果用户将值改为对象继续监控\r\n      value = newValue;\r\n\r\n      dep.notify(); // 异步更新 防止频繁操作\r\n    },\r\n  });\r\n  // 数组的更新 去重  优化  组件渲染\r\n}\r\n\r\nexport function observe(data) {\r\n  // typeof null 也是object\r\n  // 不能不是对象 并且不是null\r\n  if (typeof data !== \"object\" || data == null) {\r\n    return;\r\n  }\r\n  if (data.__ob__) {\r\n    return data;\r\n  }\r\n  return new Observer(data);\r\n}\r\n","import { observe } from \"./observer/index\";\r\nimport {proxy, nextTick} from './util.js'\r\nimport Watcher from './observer/watcher'\r\nexport function initState(vm) { // vm.$options\r\n    const opts = vm.$options;\r\n    if (opts.props) {\r\n        initProps(vm);\r\n    }\r\n    if (opts.methods) {\r\n        initMethods(vm);\r\n    }\r\n    if (opts.data) {\r\n        initData(vm);\r\n    }\r\n    if (opts.computed) {\r\n        initComputed(vm);\r\n    }\r\n    if (opts.watch) {\r\n        initWatch(vm);\r\n    }\r\n}\r\nfunction initProps() {}\r\nfunction initMethods() {}\r\n\r\nfunction initData(vm) { // 数据的初始化操作\r\n    let data = vm.$options.data;\r\n\r\n    // vm._data 保存用户的所有的data\r\n\r\n    vm._data = data = typeof data == 'function'?data.call(vm):data;\r\n\r\n    for(let key in data){\r\n        proxy(vm,'_data',key);\r\n    }\r\n    observe(data); // 让这个对象重新定义set 和 get\r\n}\r\nfunction initComputed() {}\r\nfunction initWatch(vm) {\r\n    let watch = vm.$options.watch;\r\n    for(let key in watch){\r\n        const handler = watch[key]; // handler可能是 \r\n        if(Array.isArray(handler)){ // 数组 、\r\n            handler.forEach(handle=>{\r\n                createWatcher(vm,key,handle);\r\n            })\r\n        }else{\r\n            createWatcher(vm,key,handler); // 字符串 、 对象 、 函数\r\n        }\r\n    }\r\n}\r\n\r\nfunction createWatcher(vm,exprOrFn,handler,options){ // options 可以用来标识 是用户watcher\r\n    if(typeof handler == 'object'){\r\n        options = handler\r\n        handler = handler.handler; // 是一个函数\r\n    }\r\n    if(typeof handler == 'string'){\r\n        handler = vm[handler]; // 将实例的方法作为handler\r\n    }\r\n    // key handler 用户传入的选项\r\n    return vm.$watch(exprOrFn,handler,options)\r\n}\r\n\r\nexport function stateMixin(Vue){\r\n    Vue.prototype.$nextTick = function (cb) {\r\n        nextTick(cb);\r\n    }\r\n    Vue.prototype.$watch = function (exprOrFn,cb,options = {}) {\r\n        // 数据应该依赖这个watcher  数据变化后应该让watcher从新执行\r\n        let watcher = new Watcher(this,exprOrFn,cb,{...options,user:true});\r\n        if(options.immediate){\r\n            cb(); // 如果是immdiate应该立刻执行\r\n        }\r\n    }\r\n}","import { compileToFunctions } from \"./compiler/index\";\r\nimport { callHook, mountComponent } from \"./lifecycle\";\r\nimport { initState } from \"./state\";\r\nimport { mergeOptions } from \"./util\";\r\n\r\n\r\nexport function initMixin(Vue) {\r\n    Vue.prototype._init = function(options) {\r\n        const vm = this;\r\n\r\n        vm.$options = mergeOptions(vm.constructor.options, options); // 需要将用户自定义的options 和全局的options做合并\r\n        callHook(vm, 'beforeCreate')\r\n\r\n        initState(vm); // 初始化状态\r\n        callHook(vm, 'created')\r\n\r\n        if (vm.$options.el) { // 挂载的逻辑\r\n            vm.$mount(vm.$options.el)\r\n        }\r\n    }\r\n    // 1.render 2.template 3.外部template  （el存在的时候）\r\n    Vue.prototype.$mount = function(el) {\r\n        // 挂载操作\r\n        const vm = this; \r\n        const options = vm.$options;\r\n        el = document.querySelector(el);\r\n      \r\n\r\n        if (!options.render) {\r\n            let template = options.template;\r\n            if (!template && el) {\r\n                template = el.outerHTML;\r\n            }\r\n            // template => render方法\r\n            // 1.处理模板变为ast树 2.标记静态节点 3.codegen=>return 字符串 4.new Function + with (render函数)\r\n            const render = compileToFunctions(template);\r\n            //render = new Function(`width(this){_c(,_v(),...)}`)\r\n            options.render = render\r\n        }\r\n        // 渲染时用的都是这个render方法\r\n\r\n        // 需要挂载这个组件\r\n        mountComponent(vm, el);\r\n    }\r\n}","export function renderMixin(Vue) { // 用对象来描述dom的解构\r\n    Vue.prototype._c = function() { // 创建虚拟dom元素\r\n        return createElement(...arguments);\r\n    }\r\n\r\n    // 1.当结果是对象时 会对这个对象取值\r\n    Vue.prototype._s = function(val) { // stringify\r\n        return val == null ? '' : (typeof val == 'object') ? JSON.stringify(val) : val;\r\n    }\r\n    Vue.prototype._v = function(text) { // 创建虚拟dom文本元素\r\n        return createTextVnode(text);\r\n    }\r\n    Vue.prototype._render = function() { // _render = render\r\n        const vm = this;\r\n        const render = vm.$options.render;\r\n        let vnode = render.call(vm);\r\n        return vnode;\r\n    }\r\n}\r\n// _c('div',{},_v(),_c())\r\nfunction createElement(tag,data={},...children){\r\n   return vnode(tag,data,data.key,children)\r\n}\r\nfunction createTextVnode(text){\r\n    return vnode(undefined,undefined,undefined,undefined,text);\r\n}\r\n// 用来产生虚拟dom的,操作真实dom浪费性能\r\nfunction vnode(tag,data,key,children,text){\r\n    return {\r\n        tag,\r\n        data,\r\n        key,\r\n        children,\r\n        text,\r\n    }\r\n}","// es6的类的写法 一个整体\r\n\r\nimport { initGlobalApi } from './global-api/index';\r\nimport { initMixin } from \"./init\";\r\nimport { lifecycleMixin } from \"./lifecycle\";\r\nimport { stateMixin } from './state';\r\nimport { renderMixin } from \"./vdom/index\";\r\n\r\n// 用Vue的构造函数  创建组件\r\nfunction Vue(options){\r\n   this._init(options); //入口方法,做初始化操作\r\n}\r\n\r\n\r\n// 原型方法\r\ninitMixin(Vue); // init方法\r\nlifecycleMixin(Vue); // _update\r\nrenderMixin(Vue); // _render\r\nstateMixin(Vue); \r\n\r\n// 静态方法 Vue.component Vue.directive Vue.extend Vue.mixin ...\r\n\r\ninitGlobalApi(Vue);\r\n\r\n// 初始化方法\r\nexport default Vue;"],"names":["proxy","vm","data","key","Object","defineProperty","get","set","newValue","target","value","enumerable","configurable","LIFECYCLE_HOOKS","strats","parentVal","childValue","mergeHook","concat","forEach","hook","mergeOptions","parent","child","options","mergeField","hasOwnProperty","callbacks","pending","flushCallbacks","length","cb","shift","timerFunc","Promise","resolve","then","MutationObserver","observe","textNode","document","createTextNode","characterData","textContent","setImmediate","setTimeout","nextTick","push","initGlobalApi","Vue","mixin","defaultTagRE","genProps","attrs","str","i","attr","name","obj","split","item","JSON","stringify","slice","gen","node","type","generate","text","test","tokens","lastIndex","match","index","exec","trim","join","genChildren","el","children","map","code","tag","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","createASTElement","tagName","root","currentParent","stack","start","element","end","pop","chars","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","advance","substring","n","compileToFunctions","template","ast","console","log","render","Function","patch","oldVnode","vnode","createElm","parentElm","parentNode","insertBefore","nextSibling","removeChild","createElement","updateProperties","appendChild","newProps","styleName","style","className","setAttribute","id","Dep","subs","addDep","watcher","update","pushTarget","popTarget","Watcher","exprOrFn","user","deps","depsId","Set","getter","path","dep","has","add","addSub","result","oldValue","call","queueWatcher","queue","flushSchedulerQueue","run","lifecycleMixin","prototype","_update","$el","mountComponent","callHook","updateComponent","_render","handlers","$options","oldArrayProtoMethods","Array","arrayMethods","create","methods","method","args","apply","inserted","ob","__ob__","observeArray","notify","Observer","isArray","__proto__","walk","keys","defineReactive","childDep","depend","initState","opts","props","initData","computed","watch","initWatch","_data","handler","handle","createWatcher","$watch","stateMixin","$nextTick","immediate","initMixin","_init","constructor","$mount","querySelector","outerHTML","renderMixin","_c","arguments","_s","val","_v","createTextVnode","undefined"],"mappings":"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"}